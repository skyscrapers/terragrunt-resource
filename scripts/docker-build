#!/bin/bash

set -eu -o pipefail

release_dir="$( cd "$( dirname "$0" )" && cd .. && pwd )"

green='\033[32m'
yellow='\033[33m'
red='\033[31m'
nc='\033[0m'

usage() {
  >&2 cat <<EOF
SYNOPSIS:
    Builds a Docker image for testing changes to the terraform-resource
USAGE:
    $0 <MANDATORY ARGUMENTS> [OPTIONAL ARGUMENTS]
MANDATORY ARGUMENTS:
    --image-name <name>        Name of the Docker image you'd like to build, e.g. ljfranklin/terraform-resource:PR-test
    --opentofu-url <url>       URL of the opentofu release you'd like to include, e.g. https://github.com/opentofu/opentofu/releases/download/v1.7.1/tofu_1.7.1_linux_amd64.zip
    --terragrunt-url <url>      URL of the terragrunt release you'd like to include, e.g. https://github.com/gruntwork-io/terragrunt/releases/download/v0.43.0/terragrunt_linux_amd64
    --target-arch <arch>       Architecture to build the image for e.g. amd64 or arm64
OPTIONAL ARGUMENTS:
    -h                         Prints this usage text.
EOF
  exit 1
}

if [ "$#" = 0 ]; then
  >&2 echo -e "${red}No arguments given!${nc}"
  usage
fi

image_name=""
opentofu_url=""
terragrunt_url=""
target_arch=""
set +u
while true ; do
  if [ "$#" = 0 ]; then
    break
  fi
  case "$1" in
    --image-name)
      if [ -z "$2" ]; then
        >&2 echo -e "${red}--image-name requires an argument!${nc}"
        exit 1
      fi
      image_name="$2"
      shift 2
      ;;
    --opentofu-url)
      if [ -z "$2" ]; then
        >&2 echo -e "${red}--opentofu-url requires an argument!${nc}"
        exit 1
      fi
      opentofu_url="$2"
      shift 2
      ;;
    --terragrunt-url)
      if [ -z "$2" ]; then
        >&2 echo -e "${red}--terragrunt-url requires an argument!${nc}"
        exit 1
      fi
      terragrunt_url="$2"
      shift 2
      ;;
    --target-arch)
      if [ -z "$2" ]; then
        >&2 echo -e "${red}--target-arch requires an argument!${nc}"
        exit 1
      fi
      target_arch="$2"
      shift 2
      ;;
    -h)
      usage
      ;;
    *)
      >&2 echo -e "${red}Unrecognized argument '$1'!${nc}"
      usage
      ;;
  esac
done
set -u

if [ -z "${image_name}" ]; then
  >&2 echo -e "${red}Missing required flag --image-name <name>!${nc}"
  usage
fi
if [ -z "${opentofu_url}" ]; then
  >&2 echo -e "${red}Missing required flag --opentofu-url <url>!${nc}"
  usage
fi
if [ -z "${terragrunt_url}" ]; then
  >&2 echo -e "${red}Missing required flag --terragrunt-url <url>!${nc}"
  usage
fi

tmpdir="$(mktemp -d /tmp/terraform-resource-docker.XXXXXX)"
trap "{ rm -rf ${tmpdir}; }" EXIT

pushd "${tmpdir}" > /dev/null

  echo "Downloading OpenTofu from '${opentofu_url}'..."
  wget -q -O opentofu.zip "${opentofu_url}"
  mkdir -p ./amd64/terraform/opentofu
  unzip -d ./amd64/terraform/opentofu opentofu.zip > /dev/null

  echo "Downloading terragrunt from '${terragrunt_url}'..."
  wget -q -O ./amd64/terraform/terragrunt "${terragrunt_url}"
  chmod +x ./amd64/terraform/terragrunt

  echo "Compiling terragrunt-resource binaries..."
  CGO_ENABLED=0 GOOS=linux GOARCH=amd64 "${release_dir}/scripts/build" "$PWD/amd64" > /dev/null

  echo "Building docker image '${image_name}'..."
  cp "${release_dir}/docker-prod/Dockerfile" .
  BUILD_ARGS=""
  if [ -n "${target_arch}" ]; then
    BUILD_ARGS="--build-arg TARGETARCH=${target_arch}"
  fi
  docker build ${BUILD_ARGS} -t "${image_name}" .
popd > /dev/null

echo -e "${green}Successfully created docker image '${image_name}'!${nc}"
