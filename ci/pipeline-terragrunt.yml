shared:
  - &failure-alert
    put: slack-alert
    params:
      silent: true
      icon_emoji: ":interrobang:"
      text: |
        *The <$ATC_EXTERNAL_URL/teams/main/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|$BUILD_PIPELINE_NAME - $BUILD_JOB_NAME> job failed!*
  - &success-alert
    put: slack-alert
    params:
      silent: true
      icon_emoji: ":rocket:"
      text: |
        *The <$ATC_EXTERNAL_URL/teams/main/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|$BUILD_PIPELINE_NAME - $BUILD_JOB_NAME> job passed!*

jobs:
  - name: push-prod-image
    on_success: *success-alert
    on_failure: *failure-alert
    plan:
      - in_parallel:
          - get: resource-src
            trigger: true
          - get: terragrunt-release
            trigger: true
            params:
              globs:
                - terragrunt_linux_amd64
                - terragrunt_linux_arm64
          - get: opentofu-release
            trigger: true
            params:
              globs:
                - tofu_*_linux_amd64
                - tofu_*_linux_arm64
      - in_parallel:
          - task: write-docker-metadata-files
            config:
              platform: linux
              image_resource:
                type: docker-image
                source:
                  repository: alpine
                  username: ((DOCKER_HUB_SKYSCRAPERS_CREDS.username))
                  password: ((DOCKER_HUB_SKYSCRAPERS_CREDS.password))
              inputs:
                - name: resource-src
                - name: opentofu-release
                - name: terragrunt-release
              outputs:
                - name: docker-metadata
              run:
                path: /bin/sh
                args:
                  - "-c"
                  - |
                    TF_VERSION="$(cat opentofu-release/tag)"
                    TF_VERSION="${TF_VERSION:1}" # Trim trailing v from tag
                    TG_VERSION="$(cat terragrunt-release/tag)"
                    TG_VERSION="${TG_VERSION:1}" # Trim trailing v from tag
                    SHA="$(cat resource-src/.git/short_ref)"
                    echo "${TF_VERSION} ${TF_VERSION}-${SHA} ${TF_VERSION}-${TG_VERSION}" > docker-metadata/tags
                    echo "{\"opentofu_version\": \"${TF_VERSION}\", \"terragrunt_version\": \"${TG_VERSION}\"}" > docker-metadata/labels
          - task: build-artifacts
            file: resource-src/ci/tasks/build-prod-artifacts.yml
      - put: terragrunt-resource-image
        params:
          build: build-artifacts/
          tag_as_latest: true
          additional_tags: docker-metadata/tags
          labels_file: docker-metadata/labels
          buildx_platforms: "linux/amd64,linux/arm64"

resource_types:
  - name: docker-buildx
    type: registry-image
    privileged: true
    source:
      repository: ljfranklin/docker-buildx-resource
      tag: latest
  - name: slack-notification
    type: registry-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: latest

resources:
  - name: resource-src
    type: git
    icon: github
    source:
      uri: git@github.com:skyscrapers/terragrunt-resource.git
      branch: master
      private_key: ((GIT_PRIVATE_KEY))
  - name: terragrunt-release
    type: github-release
    icon: github
    check_every: 24h
    source:
      owner: gruntwork-io
      repository: terragrunt
      access_token: ((GITHUB_REPO_ACCESS_TOKEN_SKY_TECH))
  - name: opentofu-release
    type: github-release
    check_every: 24h
    icon: github
    source:
      user: opentofu
      repository: opentofu
      access_token: ((GITHUB_REPO_ACCESS_TOKEN_SKY_TECH))
  - name: terragrunt-resource-image
    type: docker-buildx
    icon: docker
    source:
      repository: skyscrapers/terragrunt-resource
      tag: latest
      username: ((DOCKER_HUB_SKYSCRAPERS_CREDS.username))
      password: ((DOCKER_HUB_SKYSCRAPERS_CREDS.password))
  - name: slack-alert
    type: slack-notification
    icon: slack
    source:
      url: ((SLACK_NOTIFICATIONS_URL))
